@use "_colors" as systemColors;
@use "_mixin" as *;
@use "_breakPoints" as *;

*,
*::before,
*::after {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
  font-family: 'Heebo', sans-serif;
}

// Here you can use your variables from _colors.scss
// For example:
// h1 {
//     color: systemColors.$white-color;
// }

// Here you can use your mixin and pass parameters from _mixin.scss 
// For example: 
// .container {
//     @include getFlex(column, rtl, relative);
// }


// Nesting in SCSS is a way to write CSS code in a more readable way.
// You can nest your CSS selectors inside each other.

.container {
  direction: rtl;

  img {
    @include getWidthHeight(100vw, 455px);
    object-fit: cover;
  }

  .div-1 {
    position: absolute;
    top: 120px;
    right: 270px;
    padding: 40px;
    @include getWidthHeight(440px, 500px);
    @include getBackground(systemColors.$shadeblack-color);

    h1 {
      padding-bottom: 20px;
      @include getColor(systemColors.$white-color);
    }

    p {
      padding-bottom: 30px;
      @include getColor(systemColors.$ofwhite-color);
    }

    form {
      label {
        display: flex;
        flex-direction: column;
        @include getColor(systemColors.$ofwhite-color);
      }
      
      input {
        padding: 8px 15px;
        margin-bottom: 15px;
        direction: ltr;
        width: -webkit-fill-available;
      }

      button {
        padding: 7px 50px;
        margin-top: 10px;
        border: none;
        @include getBackground(systemColors.$pink-color);
        @include getColor(systemColors.$ofwhite-color);
      }
    }
  }
}

// This is how you can use MEDIA QUERIES in SCSS
// You can use the breakPoints from _breakPoints.scss

.container img {
  /* X-Small device (portrait phones, less than 576px) */
  @media (min-width: $x-small) and (max-width: $sm) {
    height: 288px;
  }

  /* Small device (landscap phone, 576px and up) 576px to 768px */
  @media (min-width: $sm) and (max-width: $me) {

  }
}


.container .div-1 {
  /* X-Small device (portrait phones, less than 576px) */
  @media (min-width: $x-small) and (max-width: $sm) {
    right: 25px;
    left: 30px;
    width: 85%;
  }

  /* Small device (landscap phone, 576px and up) 576px to 768px */
  @media (min-width: $sm) and (max-width: $me) {
    right: 80px;
  }
}

.container .div-1 h1 {
  /* X-Small device (portrait phones, less than 576px) */
  @media (min-width: $x-small) and (max-width: $sm) {
    text-align: center;
    padding: 15px;
  }
}

.container .div-1 p {
  /* X-Small device (portrait phones, less than 576px) */
  @media (min-width: $x-small) and (max-width: $sm) {
    text-align: center;
  }
}

.container .div-1 form input {
  /* X-Small device (portrait phones, less than 576px) */
  @media (min-width: $x-small) and (max-width: $sm) {
    border: 1px solid systemColors.$pink-color;
  }
}